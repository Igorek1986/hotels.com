from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, Message
from loader import bot
from telegram_bot_calendar import DetailedTelegramCalendar
from config_data import easy_travel
from keyboards.reply.menu import button_menu


def city_choose(city_lst: list[tuple[str, str, str]], message: Message,
                region_db: bool = False) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param city_lst: –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (–ì–æ—Ä–æ–¥, –°—Ç–∞—Ä–Ω–∞ –∏ –£–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –≥–æ—Ä–æ–¥–∞)
    :param message: Message.
    :param region_db: True or False. True —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥ —É–∂–µ –∏—Å–∫–∞–ª–∏, —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    """

    keyboard = InlineKeyboardMarkup()
    if not city_lst:
        bot.delete_message(chat_id=message.chat.id, message_id=message.message_id-1)
        bot.send_message(chat_id=message.chat.id, text=easy_travel.get('no_city'), reply_markup=button_menu())

    else:
        for elem in city_lst:
            city_name = f'{elem[0]}, {elem[1]}'
            city_id = elem[-1]
            keyboard.add(InlineKeyboardButton(text=city_name, callback_data=city_id))
        keyboard.add(InlineKeyboardButton(text='üîé–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥', callback_data='other_city'))
        if region_db:
            keyboard.add(InlineKeyboardButton(text='–û–±–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É?', callback_data='update'))
            bot.edit_message_text(chat_id=message.chat.id,
                                  message_id=message.message_id-1,
                                  text='–ù–∞—à–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ–≥–∏–æ–Ω—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ\n–ü—Ä–µ–¥–ª–∞–≥–∞—é –Ω–µ–º–Ω–æ–≥–æ —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å:',
                                  reply_markup=keyboard)

        else:
            bot.edit_message_text(chat_id=message.chat.id,
                                  message_id=message.message_id-1,
                                  text='–ü—Ä–µ–¥–ª–∞–≥–∞—é –Ω–µ–º–Ω–æ–≥–æ —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å:',
                                  reply_markup=keyboard)


def yes_no() -> InlineKeyboardMarkup:
    """–§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É '–¥–∞' '–Ω–µ—Ç'."""

    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text='–î–∞', callback_data='yes'))
    keyboard.add(InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no'))
    return keyboard


def count_object() -> InlineKeyboardMarkup:
    """–§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç —Ü–∏—Ñ—Ä–æ–≤—É—é –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ—Ç 0 –¥–æ 10."""
    keyboard = InlineKeyboardMarkup(row_width=3)
    buttons = []
    for num in range(1, 11):
        button = InlineKeyboardButton(f'{num}', callback_data=num)
        buttons.append(button)
    keyboard.add(*buttons)
    return keyboard


class MyCalendar(DetailedTelegramCalendar):
    """–ö–ª–∞—Å—Å MyCalendar. –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å DetailedTelegramCalendar.
    –î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–µ–ª–æ—á–∫–∏ –∏ —É–±–∏—Ä–∞–µ—Ç –ø—É—Å—Ç—ã–µ –≥–æ–¥–∞, –º–µ—Å—è—Ü—ã."""
    prev_button = "‚¨Ö"
    next_button = "‚û°"
    empty_month_button = ""
    empty_year_button = ""


RU_STEP = {'y': '–≥–æ–¥', 'm': '–º–µ—Å—è—Ü', 'd': '–¥–µ–Ω—å'}


def get_calendar(is_process=False, callback_data=None, **kwargs):
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç –∏–Ω–ª–∞–π–Ω –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã.
    """

    if is_process:
        result, key, step = MyCalendar(calendar_id=kwargs['calendar_id'],
                                       current_date=kwargs.get('current_date'),
                                       min_date=kwargs['min_date'],
                                       max_date=kwargs['max_date'],
                                       locale=kwargs['locale']).process(callback_data.data)

        return result, key, step

    else:
        calendar, step = MyCalendar(calendar_id=kwargs['calendar_id'],
                                    current_date=kwargs.get('current_date'),
                                    min_date=kwargs['min_date'],
                                    max_date=kwargs['max_date'],
                                    locale=kwargs['locale']).build()

        return calendar, step


def hotel_inline(info: list[list[tuple[str, str, float | int, float | int, str, str], list[str]]],
                 cur: int) -> InlineKeyboardMarkup:
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ—Ç–µ–ª–µ–π –∏–ª–∏ –æ—Ç–µ–ª–µ–π –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏.
    :param info: –ù–∞–π–¥–µ–Ω–Ω—ã–µ –æ—Ç–µ–ª–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–µ–ª–µ.
    :param cur: –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –æ—Ç–µ–ª—è.
    :return: InlineKeyboardMarkup
    """

    site = info[cur][0][4]
    keyboard = InlineKeyboardMarkup(row_width=3)

    buttons = [

        InlineKeyboardButton(text='–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç', url=site),
        InlineKeyboardButton(text='', callback_data='None'),
        InlineKeyboardButton(text='–§–æ—Ç–æ' if info[cur][-1] else '', callback_data='photos'),
        InlineKeyboardButton(text='‚¨Ö', callback_data='back'),
        InlineKeyboardButton(text=f'{cur+1}/{len(info)}', callback_data='None'),
        InlineKeyboardButton(text='‚û°', callback_data='next'),
        InlineKeyboardButton(text='üîé–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥', callback_data='other_city'),
        InlineKeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'),
        InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å‚ùå', callback_data='close')

    ]

    return keyboard.add(*buttons)


def photos(info: list[list[tuple[str, str, float | int, float | int, str, str], list[str]]],
           cur: int, num_hotel: int) -> InlineKeyboardMarkup:
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.
    :param info: –ù–∞–π–¥–µ–Ω–Ω—ã–µ –æ—Ç–µ–ª–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–µ–ª–µ.
    :param cur: –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.
    :param num_hotel: –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –æ—Ç–µ–ª—è.
    :return: InlineKeyboardMarkup
    """

    keyboard = InlineKeyboardMarkup(row_width=3)
    buttons = [InlineKeyboardButton(text='', callback_data='None'),
               InlineKeyboardButton(text='–û—Ç–µ–ª—å', callback_data='hotel'),
               InlineKeyboardButton(text='', callback_data='None'),
               InlineKeyboardButton(text='‚¨Ö', callback_data='back_photo'),
               InlineKeyboardButton(text=f'{cur + 1}/{len(info[num_hotel][1])}', callback_data='None'),
               InlineKeyboardButton(text='‚û°', callback_data='next_photo')]

    return keyboard.add(*buttons)
